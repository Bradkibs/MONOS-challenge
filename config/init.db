CREATE TABLE users (
    id VARCHAR PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR NOT NULL UNIQUE,
    password VARCHAR NOT NULL
);
CREATE TABLE businesses (
    id VARCHAR PRIMARY KEY,
    name VARCHAR NOT NULL,
    description TEXT,
    vendorId VARCHAR REFERENCES users(id) ON DELETE CASCADE
);
CREATE TABLE branches (
    id VARCHAR PRIMARY KEY,
    businessId VARCHAR REFERENCES businesses(id) ON DELETE CASCADE,
    location VARCHAR NOT NULL
);
CREATE TABLE subscriptions (
    id VARCHAR PRIMARY KEY,
    businessId VARCHAR REFERENCES businesses(id) ON DELETE CASCADE,
    tier VARCHAR NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE,
    status VARCHAR
);

CREATE TABLE payments (
    id VARCHAR PRIMARY KEY,
    subscriptionId VARCHAR REFERENCES subscriptions(id) ON DELETE CASCADE,
    amount DECIMAL NOT NULL,
    date DATE NOT NULL,
    status VARCHAR NOT NULL
);

CREATE TABLE invoices (
    id VARCHAR PRIMARY KEY,
    paymentId VARCHAR REFERENCES payments(id) ON DELETE CASCADE,
    issueDate DATE NOT NULL,
    dueDate DATE NOT NULL,
    status VARCHAR NOT NULL
);

CREATE TABLE products (
    id VARCHAR PRIMARY KEY,
    businessId VARCHAR REFERENCES businesses(id) ON DELETE CASCADE,
    name VARCHAR NOT NULL,
    details TEXT,
    quantity INT NOT NULL,
    price DECIMAL NOT NULL
);
CREATE TABLE notifications (
    id VARCHAR PRIMARY KEY,
    userId VARCHAR REFERENCES users(id) ON DELETE CASCADE,
    invoiceId VARCHAR REFERENCES invoices(id) ON DELETE SET NULL,
    type VARCHAR(50) NOT NULL,
    message TEXT NOT NULL, VARCHAR(20) DEFAULT 'pending',
    createdAt TIMESTAMP DEFAULT NOW(),
    updatedAt TIMESTAMP DEFAULT NOW()
);

CREATE TABLE claims (
    id VARCHAR PRIMARY KEY,
    user_id VARCHAR NOT NULL,
    email VARCHAR(255) NOT NULL,
    issued_at TIMESTAMP NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    role VARCHAR(50),
    status VARCHAR(50) DEFAULT 'active',
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
