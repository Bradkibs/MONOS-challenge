-- Users table: no changes needed, but the soft delete will apply to user-related entities
CREATE TABLE users (
    id UUID PRIMARY KEY,
    name VARCHAR NOT NULL,
    email VARCHAR NOT NULL UNIQUE,
    password VARCHAR NOT NULL,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Businesses table with soft delete
CREATE TABLE businesses (
    id UUID PRIMARY KEY,
    name VARCHAR NOT NULL,
    description TEXT,
    vendorId UUID REFERENCES users(id) ON DELETE CASCADE,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Branches table with soft delete
CREATE TABLE branches (
    id UUID PRIMARY KEY,
    businessId UUID REFERENCES businesses(id) ON DELETE CASCADE,
    location VARCHAR NOT NULL,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Subscriptions table with soft delete
CREATE TABLE subscriptions (
    id UUID PRIMARY KEY,
    businessId UUID REFERENCES businesses(id) ON DELETE CASCADE,
    tier VARCHAR NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE,
    status VARCHAR,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Payments table with soft delete
CREATE TABLE payments (
    id UUID PRIMARY KEY,
    subscriptionId UUID REFERENCES subscriptions(id) ON DELETE CASCADE,
    amount DECIMAL NOT NULL,
    date DATE NOT NULL,
    status VARCHAR NOT NULL,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Invoices table with soft delete
CREATE TABLE invoices (
    id UUID PRIMARY KEY,
    paymentId UUID REFERENCES payments(id) ON DELETE CASCADE,
    issueDate DATE NOT NULL,
    dueDate DATE NOT NULL,
    status VARCHAR NOT NULL,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Products table with soft delete
CREATE TABLE products (
    id UUID PRIMARY KEY,
    businessId UUID REFERENCES businesses(id) ON DELETE CASCADE,
    name VARCHAR NOT NULL,
    details TEXT,
    quantity INT NOT NULL,
    price DECIMAL NOT NULL,
    deleted_at TIMESTAMP -- Soft delete column
);

-- Notifications table with soft delete
CREATE TABLE notifications (
    id UUID PRIMARY KEY,
    userId UUID REFERENCES users(id) ON DELETE CASCADE,
    invoiceId UUID REFERENCES invoices(id) ON DELETE SET NULL,
    type CHAR(20) NOT NULL,
    message  CHAR(20) NOT NULL DEFAULT 'pending',
    createdAt TIMESTAMP DEFAULT NOW(),
    updatedAt TIMESTAMP DEFAULT NOW(),
    deleted_at TIMESTAMP -- Soft delete column
);

-- Claims table with soft delete
CREATE TABLE claims (
    id UUID PRIMARY KEY,
    user_id UUID NOT NULL,
    email VARCHAR(255) NOT NULL,
    issued_at TIMESTAMP NOT NULL,
    expires_at TIMESTAMP NOT NULL,
    role VARCHAR(50),
    status VARCHAR(50) DEFAULT 'active',
    deleted_at TIMESTAMP, -- Soft delete column
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);
